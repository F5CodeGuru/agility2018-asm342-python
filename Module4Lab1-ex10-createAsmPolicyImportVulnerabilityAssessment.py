#This script requires python 3
#To run 
#python3 <scriptname>.py <asm policy name>
#This script creates a new asm policy specified in the policyName variable
import requests
import json, sys
requests.packages.urllib3.disable_warnings() 

#Globals
#Configurable globals, should be configured to match your environment
adminUser = 'admin'
adminPass = 'bigip123'
host = 'https://10.4.6.10'
asmPoliciesPath = '/mgmt/tm/asm/policies'
policyName="vuln1"
#End configurable globals

#Host + uri
asmPoliciesUrl = host + asmPoliciesPath

jsonBody = '{"name": "' + policyName + '"}'
vulnerabilityFile = ''

#Headers
restHeaders = {

    'Content-Type': 'application/json; charset=UTF-8'

}

###Get the name of the policy passed as a command line arg
if len(sys.argv) > 1:

	vulnerabilityFile=sys.argv[1]
	
else:
    
    print('Error requires asm policy name')
    sys.exit()
##

#Request to create asm policy
#curl -sk -u admin:pass -X POST https://<bigip>/mgmt/tm/asm/policies -d '{"name":"vuln1"}'
asmPoliciesData = requests.post(url=asmPoliciesUrl,data=jsonBody,headers=restHeaders,auth=(adminUser,adminPass),verify=False)


#Store the policy's data in json format 
asmPoliciesDataJson = json.loads(asmPoliciesData.text)
print(asmPoliciesDataJson['selfLink'])

importPolicyJson = '{ "policyReference": { "link":' + asmPoliciesDataJson['selfLink'] + '}, "importAllDomainNames": "false","domainNames": [""],"subscriptionId": "4132","scanId": "3883"}'
print(importPolicyJson)

vulnerabilityFileHandle = open(vulnerabilityFile, 'rb')
vulnerabilityFileRequests = { 'file': vulnerabilityFileHandle}
asmPoliciesData = requests.post(url=asmPoliciesUrl,data=jsonBody,files=vulnerabilityFileRequests,headers=restHeaders,auth=(adminUser,adminPass),verify=False)
vulnerabilityFileHandle.close()
